# -----------------------------------------------------------------------------
# IMPORTANT PREP (READ ME)
# - sshKey MUST be a PUBLIC key (e.g., ~/.ssh/id_ed25519.pub). Generate one if needed:
#     ssh-keygen -t ed25519 -C "you@host" -f ~/.ssh/id_ed25519
#   Then:  cat ~/.ssh/id_ed25519.pub
# - pullSecret MUST be single-line JSON. Examples:
#     tr -d '\n' < pull-secret.json
#     # or
#     jq -c . < pull-secret.json
# - Connected installs: use your Red Hat pull secret from cloud.redhat.com/openshift/install/pull-secret
# - Disconnected installs: include ONLY your mirror registry auth in pullSecret (single-line JSON).
#   NOTE: If you truly lack credentials, OKD docs show a dummy pattern for OKD (NOT SUPPORTED for OCP).
# - If your environment uses a custom CA (proxy or mirror registry), provide it via additionalTrustBundle and set
#   additionalTrustBundlePolicy: Always
# -----------------------------------------------------------------------------
apiVersion: v1
baseDomain: example.com
metadata:
  name: cluster

# fips: true  # Optional

networking:
  networkType: OVNKubernetes
  machineNetwork:
  - cidr: 10.90.0.0/24
  # clusterNetwork and serviceNetwork use installer defaults if omitted

controlPlane:
  name: master
  replicas: 3

compute:
- name: worker
  replicas: 3

sshKey: 'ssh-ed25519 AAAA...REPLACE_ME... user@host'

pullSecret: '{"auths":{"registry.redhat.io":{"auth":"REPLACE_BASE64","email":"you@example.com"}}}'

# UPI: Use an EXTERNAL load balancer. The installer will NOT manage VIPs.
platform:
  none: {}

# Optional but common in UPI:
# publish: External                 # Optional: leave default (External). Internal restricts default routes to Service/Ingress.
# proxy:
#   httpProxy: http://user:pass@proxy.example.com:3128
#   httpsProxy: http://user:pass@proxy.example.com:3128
#   noProxy: ".cluster.example.com,.example.com,127.0.0.1,localhost,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

# For your LB, see our utility-box canonical HAProxy:
#   utility-box/load-balancer/haproxy.cfg
# Point DNS:
#   api.cluster.example.com     -> 10.90.0.10
#   api-int.cluster.example.com -> 10.90.0.10
#   *.apps.cluster.example.com  -> 10.90.0.11

# additionalTrustBundle: |         # Optional: Proxy CA and/or registry CA
#   -----BEGIN CERTIFICATE-----
#   MIID...REPLACE_ME...
#   -----END CERTIFICATE-----
# additionalTrustBundlePolicy: Always

# imageDigestSources:              # Disconnected installs (preferred over imageContentSources)
# - mirrors:
#   - registry.example.com/ocp/release
#   source: quay.io/openshift-release-dev/ocp-release
# - mirrors:
#   - registry.example.com/ocp/release-images
#   source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
#
# imageContentSources:             # (Deprecated) v1 mapping; only if required for legacy flows
# - mirrors:
#   - registry.example.com/ocp/release
#   source: quay.io/openshift-release-dev/ocp-release

# Typical flow (UPI):
# 1) openshift-install create manifests
# 2) openshift-install create ignition-configs     # UPI generates Ignition; you handle infra/boot yourself
# 3) Prepare infra (LB, DNS, Ignition hosting or boot media)
# 4) Boot nodes with Ignition URLs or ISO / virtual media
# 5) Monitor bootstrap and cluster bring-up
